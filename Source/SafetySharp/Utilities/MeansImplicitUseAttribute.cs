using System;

namespace SafetySharp.Utilities
{
	/// <summary>
	///     Indicates that the marked attribute causes the symbol it is applied to to be considered used implicitly, for instance
	///     when the symbol is used via reflection only. Prevents code analysis tools like Resharper to incorrectly mark the symbol
	///     as unused.
	/// </summary>
	/// <remarks>Code generated by JetBrain's ReSharper.</remarks>
	[AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = true)]
	public sealed class MeansImplicitUseAttribute : Attribute
	{
		/// <summary>
		///     Initializes a new instance.
		/// </summary>
		/// <param name="useKindFlags">Specifies how the symbol is used implicitly.</param>
		/// <param name="targetFlags">Specifies whether only the marked symbol or all of its members are considered used.</param>
		[UsedImplicitly]
		public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags = ImplicitUseKindFlags.Default,
										 ImplicitUseTargetFlags targetFlags = ImplicitUseTargetFlags.Default)
		{
			UseKindFlags = useKindFlags;
			TargetFlags = targetFlags;
		}

		/// <summary>
		///     Gets a value indicating how the marked symbol is used implicitly.
		/// </summary>
		[UsedImplicitly]
		public ImplicitUseKindFlags UseKindFlags { get; private set; }

		/// <summary>
		///     Gets a value indicating whether only the marked symbol or all of its members are considered used.
		/// </summary>
		[UsedImplicitly]
		public ImplicitUseTargetFlags TargetFlags { get; private set; }
	}
}